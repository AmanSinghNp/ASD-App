trigger:
  branches:
    include:
      - main   # Runs when you push to main
      - belinda

pool:
  vmImage: 'ubuntu-latest'

variables:
  node_version: '20.x'

stages:
  - stage: Build
    jobs:
      - job: Backend
        displayName: "Build Backend"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: "Install Node.js"
          
          - script: |
              npm install
              npm run build
            displayName: "Install & Build Backend"

          # - script: |
          #     cd backend
          #     npm test
          #   displayName: "Run Backend Tests"
          #   continueOnError: true # Skip if no tests yet

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'backend/dist'
              ArtifactName: 'backend'
              publishLocation: 'Container'

  #     - job: Frontend
  #       displayName: "Build Frontend"
  #       steps:
  #         - task: NodeTool@0
  #           inputs:
  #             versionSpec: $(node_version)
  #           displayName: "Install Node.js"

  #         - script: |
  #             cd frontend
  #             npm install
  #             npm run build
  #           displayName: "Install & Build Frontend"

  #         - script: |
  #             cd frontend
  #             npm test
  #           displayName: "Run Frontend Tests"
  #           continueOnError: true

  #         - task: PublishBuildArtifacts@1
  #           inputs:
  #             PathtoPublish: 'frontend/dist'
  #             ArtifactName: 'frontend'
  #             publishLocation: 'Container'
  # - stage: Deploy
  #   jobs:
  #     - deployment: DeployWeb
  #       environment: 'production'
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: AzureWebApp@1
  #                 inputs:
  #                   azureSubscription: '<your-azure-subscription>'
  #                   appName: '<your-app-service-name>'
  #                   package: '$(Pipeline.Workspace)/backend'
