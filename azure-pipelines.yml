# Trigger pipeline on main or your branch
trigger:
  branches:
    include:
      - main
      - belinda-r1

# Use latest Ubuntu agent
pool:
  vmImage: 'ubuntu-latest'

# Variables
variables:
  node_version: '20.x'

stages:
  - stage: Build
    displayName: Build Stage
    jobs:

      # -------- SERVER (BACKEND) --------
      - job: BuildServer
        displayName: 'Build & Test Server (Backend)'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'
            displayName: 'Install Node.js'

          - script: |
              npm ci
              npm install
            workingDirectory: 'server'
            displayName: 'Install server dependencies'

          # Prisma client generation
          - script: |
              npx prisma generate
              npx prisma migrate deploy
            workingDirectory: 'server'
            env:
              JWT_SECRET: supersecretkey
              DATABASE_URL: "file:./dev.db"
            displayName: 'Run Prisma Generate'

          # Run backend tests (ESNext + ts-jest)
          - script: npx jest --ci --runInBand --reporters=default --reporters=jest-junit
            workingDirectory: 'server'
            displayName: 'Run server tests'

          # Build server if needed
          - script: npx ts-node src/index.ts
            workingDirectory: 'server'
            displayName: 'Build server'

          # Optional: Publish server artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'server/dist'
              ArtifactName: 'server'
              publishLocation: 'Container'
            displayName: 'Publish server artifact'
      
      # -------- CLIENT (FRONTEND) --------
      - job: BuildClient
        displayName: 'Build & Test Client (Frontend)'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          - script: npm ci
            workingDirectory: 'client'
            displayName: 'Install client dependencies'

          - script: npm run build
            workingDirectory: 'client'
            displayName: 'Build client'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'client/dist'
              ArtifactName: 'client'
              publishLocation: 'Container'
            displayName: 'Publish client artifact'
