# Trigger the pipeline on pushes to the main or Xiao branches
trigger:
  branches:
    include:
      - main
      - Xiao-r1

# Use the latest Ubuntu virtual machine for the build agent
pool:
  vmImage: 'ubuntu-latest'

# Define variables for reuse
variables:
  node_version: '20.x'

# Define the stages of the pipeline
stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      #  Build the Client (Frontend) Application
      - job: BuildClient
        displayName: 'Build Client (Frontend)'
        steps:
          # Install the specified version of Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          # Change to the client directory, install dependencies, and run the build script
          - script: |
              cd client
              npm install
              npm run build
            displayName: 'Install client dependencies and build'
            
          #  Publish the build output (the 'dist' folder) as a pipeline artifact named 'client'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'client/dist'
              ArtifactName: 'client'
              publishLocation: 'Container'
            displayName: 'Publish client artifact'

      # Build the Server (Backend) Application 
      - job: BuildServer
        displayName: 'Build Server (Backend)'
        steps:
          # Install the specified version of Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
            displayName: 'Install Node.js'

          # Change to the server directory and install dependencies
          - script: |
              cd server
              npm install
            displayName: 'Install server dependencies'
            
          # Run Prisma Generate to ensure the Prisma Client is up-to-date
          - script: |
              cd server
              npx prisma generate
            displayName: 'Run Prisma Generate'

          # Run the build command for the server
          - script: |
              cd server
              npm run build
            displayName: 'Build server'