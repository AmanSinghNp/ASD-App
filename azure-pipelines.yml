trigger:
  branches:
    include:
      - main
      - dev
      - aman-r2.4_Prod

pool:
  vmImage: "ubuntu-latest"

variables:
  nodeVersion: "20.x"

stages:
  
  - stage: Test
    displayName: 'Test Stage'
    jobs:
      
      - job: FrontendTests
        displayName: 'Run Frontend Tests'
        steps:
          
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: npm install
            displayName: 'Install root dependencies'

          - script: npm install
            displayName: 'Install client dependencies'
            workingDirectory: 'client' 

          - script: npm test
            displayName: 'Run client tests'
            workingDirectory: 'client'

      - job: BackendTests
        displayName: 'Run Backend Tests'
        steps:
          
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: npm install
            displayName: 'Install root dependencies'

          - script: npm install
            displayName: 'Install server dependencies'
            workingDirectory: 'server'
          
          - script: |
              rm -rf dist
              rm -rf node_modules/.cache
              npm test -- --clearCache
            displayName: 'Clean caches and run tests'
            workingDirectory: 'server'

  - stage: Build
    displayName: 'Build Stage'
    dependsOn: Test 
    jobs:
      
      - job: BuildApplication
        displayName: 'Build Application'
        steps:
          
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: npm install
            displayName: 'Install root dependencies'
          
          - script: |
              npm install
              npm run build
            displayName: 'Build client'
            workingDirectory: 'client'

          - script: |
              npm install
              npx prisma generate
              npm run build
            displayName: 'Build server'
            workingDirectory: 'server'
            
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)'
              ArtifactName: 'asd-app'
              publishLocation: 'Container'
            displayName: 'Publish application artifacts'
